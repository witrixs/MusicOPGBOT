const { ActionRowBuilder, ButtonBuilder, EmbedBuilder } = require("discord.js");
const { Translate } = require("../../process_tools");

module.exports = (queue, track) => {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–∏
  if (!client.config.app.loopMessage && queue.repeatMode !== 0) return;

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –¥–æ–ª–∂–Ω—ã –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç–º–æ–¥–∑–∏
  let EmojiState = client.config.app.enableEmojis;
  const emojis = client.config.emojis;

  emojis ? EmojiState = EmojiState : EmojiState = false;

  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
  (async () => {
    const embed = new EmbedBuilder()
      .setAuthor({
        name: await Translate(
          `–ù–∞—á–∞—Ç–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ <${track.title}> –≤ <${queue.channel.name}> <üéß>`
        ),
        iconURL: track.thumbnail,
      })
      .setColor("#2f3136"); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const back = new ButtonBuilder()
      .setLabel(EmojiState ? emojis.back : ('–ù–∞–∑–∞–¥'))
      .setCustomId('back')
      .setStyle('Primary');

    const skip = new ButtonBuilder()
      .setLabel(EmojiState ? emojis.skip : ('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'))
      .setCustomId('skip')
      .setStyle('Primary');

    const resumepause = new ButtonBuilder()
      .setLabel(EmojiState ? emojis.ResumePause : ('–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å & –ü–∞—É–∑–∞'))
      .setCustomId('resume&pause')
      .setStyle('Danger');

    const loop = new ButtonBuilder()
      .setLabel(EmojiState ? emojis.loop : ('–ó–∞—Ü–∏–∫–ª–∏—Ç—å'))
      .setCustomId('loop')
      .setStyle('Danger');

    const lyrics = new ButtonBuilder()
      .setLabel(await Translate("–¢–µ–∫—Å—Ç —Ç—Ä–µ–∫–∞"))
      .setCustomId("lyrics")
      .setStyle("Secondary");

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    const row1 = new ActionRowBuilder().addComponents(
      back,
      loop,
      resumepause,
      skip,
      lyrics
    );

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å embed –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∫–∞–Ω–∞–ª –æ—á–µ—Ä–µ–¥–∏
    queue.metadata.channel.send({ embeds: [embed], components: [row1] });
  })();
};
